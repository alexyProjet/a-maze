eval $(ssh-agent -s)
ssh-add ~/.ssh/newrsa

 socket.on('new-user', (room, name) => {
            console.log("SERVEUR ON : new-user",name,room)
            socket.join(room)
            rooms[room].users[socket.id] = name
            if(Object.keys(rooms[room].users).length == 1){
                rooms[room].roomLeader = socket.id
            }
           // console.log("SERVEUR : rooms content ",rooms)
            io.in(room).emit("user-connected", name)
            console.log("SERVEUR EMIT : user-connected", name)
        });

        // si un joueur part
        socket.on('disconnect', function () {
            getUserRooms(socket).forEach(room => {
                console.log("SERVEUR ON : deconnexion de", rooms[room].users[socket.id]," dans ",rooms[room])
                if(Object.keys(rooms[room].users).length == 0){ //si plus personne, on detruit le salon
                    delete rooms[room]
                    console.log("SERVEUR ON : room detruite", rooms[room])
                }else if(rooms[room].users[socket.id] == rooms[room].roomleader){ //le leader part
                    let newLeader = null
                    console.log("SERVEUR ON : roomLeader is leaving", rooms[room].roomleader)
                    for (var id in rooms[room].users) { 
                        newLeader = id; 
                        break; 
                    } 
                    rooms[room].roomLeader = newLeader
                    console.log("SERVEUR ON : new roomLeader is", rooms[room].roomleader)
                    socket.emit('user-disconnected', rooms[room].users[socket.id])
                    delete rooms[room].users[socket.id]
                }else{
                    socket.emit('user-disconnected', rooms[room].users[socket.id])
                    delete rooms[room].users[socket.id]
                }
            })  
      
        });